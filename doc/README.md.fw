# MARTe Demo : FileWriter-1

The first FileWriter example demonstrates how to condition whether or not signal data is appended to a file
based on the current time.  It works as follows

1. Time in microseconds comes from a standard LinuxTimer data source.
2. The thread is paced at 200Hz.
3. A trigger signal is computed based on comparing current time against 1.0s
4. A sine waveform is evaluated based on the current time.
5. The sine value is displayed on the console via the LoggerDataSource (unconditionally).
6. The sine value is sent to the SignalsWriter.
7. The SignalsWriter is configured to store 2 samples pre-trigger and 2 samples post-trigger.
8. If the trigger is 1, then 5 values are written to file, timestamped accordingly.

There are two options for running the demo.  The simple case is to start the application directly in the Run state thus:

## Interactive Format

Start the docker and set up the environment to launch MARTe.

```
docker run -it -p 8084:8084 avstephen/marte2-demos-sigtools-ubuntu1804:ayr
root@abcedf:/opt/MARTe/Projects/MARTe2-sigtools/bin# source setenv.sh
root@abcedf:/opt/MARTe/Projects/MARTe2-sigtools/bin# source m2-completion.bash
```

Two terminals are required to see the behaviour matches expectations, though judicious use of `date` 
and `stat` can help prove that example does what is says on the tin.

In the first terminal, set up to watch for the expected creation of a file, which by default is
to be created in the MARTe2-demos-sigtools/temp directory.

```
root@abcedf:/opt/MARTe/Projects/MARTe2-sigtools/bin# cd ../MARTe2-demos-sigtools/temp
root@abcedf:/opt/MARTe/Projects/MARTe2-sigtools/MARTe2-demos-sigtools/temp# rm -f *.csv
root@abcedf:/opt/MARTe/Projects/MARTe2-sigtools/MARTe2-demos-sigtools/temp# watch -n 1 ls
```

In the other terminal, run the example

```
root@abcedf:/opt/MARTe/Projects/MARTe2-sigtools/bin# ./m2 STapp-0007-FileWriter-1.cfg
```

Note that on the console, after the initial flurry of setup messages, the DisplayGAM output will show the time (updating in increments of 5000us = 5ms consistent with running at 200Hz).  It also shows the value of the trigger signal (comparison with 1)

Wait until you see the trigger signal passing 1 (this can take more than one second, because startup of the MARTe application takes a few seconds).  Then kill MARTe with Ctrl-C and check the information in the csv file.  The watch command running `ls` every second should have already shown that the file was created.

## Automated Format

Create a simple bash script as follows to do everything in one.

```
#!/usr/bin/env bash
start_time-$(date --rfc-3339='ns')
./m2 STapp-0007-FileWriter-1.cfg -s Run > /tmp/log 2>&1 
sleep 15 && pkill MARTe
stat -c %y /tmp/log
stat -c %y ../MARTe2-demos-sigtools/temp/*.csv
```




## Suggested Exercises

```
docker run -it -p 8084:8084 avstephen/marte2-demos-sigtools-ubuntu1804:ayr
root@abcedf:/opt/MARTe/Projects/MARTe2-sigtools/bin# source setenv.sh
root@abcedf:/opt/MARTe/Projects/MARTe2-sigtools/bin# export PS1="# "
root@abcedf:# source m2-completion.bash
root@abcedf:# ./m2 STapp-0007-FileWriter-1.cfg -m StateMachine:START
```

## FileWriter Examples






